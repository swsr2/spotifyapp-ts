{"version":3,"file":"264.js?ver=e312d7c6a9b65b43b49a","mappings":"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","sources":["webpack://spotify-demo/./src/common/components/ErrorMessage.tsx","webpack://spotify-demo/./src/hooks/useClientCredentialToken.ts","webpack://spotify-demo/./src/apis/albumApi.ts","webpack://spotify-demo/./src/common/components/PlayButton.tsx","webpack://spotify-demo/./node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js","webpack://spotify-demo/./src/hooks/useGetNewReleases.ts","webpack://spotify-demo/./node_modules/@mui/material/esm/CardMedia/cardMediaClasses.js","webpack://spotify-demo/./node_modules/@mui/material/esm/CardMedia/CardMedia.js","webpack://spotify-demo/./src/common/components/CardComponent.tsx","webpack://spotify-demo/./src/pages/Homepage/components/NewReleases.tsx","webpack://spotify-demo/./src/pages/Homepage/components/Tracks.tsx","webpack://spotify-demo/./src/pages/Homepage/Homepage.tsx"],"sourcesContent":["import { Alert, AlertTitle, Typography } from '@mui/material'\nimport React from 'react'   \n\ninterface ErrorMessageProps {\n    errorMessage: string\n}\n\nconst ErrorMessage = ({errorMessage}:ErrorMessageProps) => {\n    return (\n        <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            <Typography variant=\"body1\">\n                {errorMessage}\n            </Typography>\n        </Alert>\n    )\n}\n\nexport default ErrorMessage","import { useQuery } from \"@tanstack/react-query\"\nimport { getClientCredentialToken } from \"../apis/authApi\"\n\n// 스포티파이 클라이언트 토큰 가져오기 \nconst useClientCredentialToken = ():string | undefined => {\n   const { data } = useQuery({\n        queryKey: [\"client-credential-token\"],\n        queryFn: getClientCredentialToken,\n    })\n    const clientCredentialToken =  data?.access_token\n    return clientCredentialToken\n}\n\nexport default useClientCredentialToken","import axios from \"axios\";\nimport { SPOTIFY_API_URL } from \"../configs/commonConfig\";\nimport {\n  AlbumTracksResponse,\n  GetAlbumsResponse,\n  GetNewReleasesResponse,\n} from \"../models/album\";\nimport api from \"../utils/api\";\n\nexport const getNewReleases = async (\n  clientCredentialToken: string\n): Promise<GetNewReleasesResponse> => {\n  try {\n    const response = await axios.get(\n      `${SPOTIFY_API_URL}/browse/new-releases?limit=12`,\n      {\n        headers: {\n          Authorization: `Bearer ${clientCredentialToken}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"fail to fetch new releases\");\n  }\n};\n\nexport const getAlbumsByIds = async (\n  ids: string[],\n  token: string\n): Promise<GetAlbumsResponse> => {\n  try {\n    const response = await api.get(`${SPOTIFY_API_URL}/albums`, {\n      params: {\n        ids: ids.join(\",\"),\n      },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  } catch (error: any) {\n    console.error(\n      \"getAlbumsByIds API Error:\",\n      error.response?.data || error.message\n    );\n    throw new Error(\"Failed to fetch albums by ids\");\n  }\n};\n\nexport const getAlbumTracks = async (\n  albumId: string,\n  token: string\n): Promise<AlbumTracksResponse> => {\n  try {\n    const response = await axios.get(\n      `${SPOTIFY_API_URL}/albums/${albumId}/tracks`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"getAlbumTracks API Error:\", error);\n    throw new Error(\"Failed to fetch album tracks\");\n  }\n};\n","import { styled } from \"@mui/material\";\nimport React from \"react\";\n\nconst PlayButtonContainer = styled(\"button\")(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  border: \"none\",\n  borderRadius: \"50%\",\n  width: \"50px\",\n  height: \"50px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  cursor: \"pointer\",\n  boxShadow: \"rgba(0, 0, 0, 0.3) 0px 8px 8px 0px\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n}));\n\nconst PlayButton: React.FC = () => {\n  return (\n    <PlayButtonContainer>\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M8 5v14l11-7z\" fill=\"black\" />\n      </svg>\n    </PlayButtonContainer>\n  );\n};\n\nexport default PlayButton;\n  ","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(\n  // For server components `muiName` is avaialble in element.type._payload.value.muiName\n  // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\n  // eslint-disable-next-line no-underscore-dangle\n  element.type.muiName ?? element.type?._payload?.value?.muiName) !== -1;\n}","import { useQuery } from \"@tanstack/react-query\";\nimport { getNewReleases } from \"../apis/albumApi\";\nimport useClientCredentialToken from \"./useClientCredentialToken\";\n\n// 신규 앨범 가져오기\nconst useGetNewReleases = () => {\n  const clientCredentialToken = useClientCredentialToken();\n  return useQuery({\n    queryKey: [\"new-Releases\"],\n    queryFn: async () => {\n      if (!clientCredentialToken) {\n        throw new Error(\"no token available\");\n      }\n      return await getNewReleases(clientCredentialToken);\n    },\n    enabled: !!clientCredentialToken,\n  });\n};\n\nexport default useGetNewReleases;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { Card, CardMedia, Typography, Box, styled } from '@mui/material'\nimport PlayButton from './PlayButton'\n\nconst CardContainer = styled(Box)({\n  position: 'relative',\n  '&:hover .play-button': {\n    opacity: 1,\n    transform: 'translateY(-10px)',\n  }\n});\n\nconst PlayButtonWrapper = styled(Box)({\n  position: 'absolute',\n  right: 8,\n  bottom: '0',\n  transform: 'translateY(20%)',\n  opacity: 0,\n  transition: 'all 0.3s ease-in-out',\n  zIndex: 1\n});\n\ninterface CardProps {\n  image: string\n  name: string\n  artistName: string | undefined\n}\n\nconst CardComponent = ({image, name, artistName}: CardProps) => {\n  return (\n    <CardContainer>\n      <Card sx={{ backgroundColor: 'black', boxShadow: 'none', marginTop: '10px', position: 'relative' }}>\n        <Box sx={{ position: 'relative' }}>\n          <CardMedia component=\"img\" image={image} alt={name} />\n          <PlayButtonWrapper className=\"play-button\">\n            <PlayButton />\n          </PlayButtonWrapper>\n        </Box>\n        <Typography sx={{\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: '100%',\n        display: 'block'\n      }}>\n        {name}\n          </Typography>\n        <Typography sx={{fontSize: '12px', color: 'gray'}}>{artistName}</Typography>\n      </Card>\n    </CardContainer>\n  )\n}\n\nexport default CardComponent\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport useGetNewReleases from \"../../../hooks/useGetNewReleases\";\nimport LoadingSpinner from \"../../../common/components/LoadingSpinner\";\nimport ErrorMessage from \"../../../common/components/ErrorMessage\";\nimport { Grid } from \"@mui/material\";\nimport CardComponent from \"../../../common/components/CardComponent\";\n\nconst NewReleases = () => {\n  const { data, isLoading, error } = useGetNewReleases();\n  // console.log(\"check data\", data)\n\n  if (error) {\n    return <ErrorMessage errorMessage={error.message} />;\n  }\n\n  const albums = data?.albums.items.slice(0, 6);\n  return (\n    <>\n      <Typography variant=\"h2\" fontWeight={700}>\n        New Released Albums\n      </Typography>\n      {albums && albums.length > 0 ? (\n        <Grid container spacing={2}>\n          {albums.map((album) => (\n            <Grid key={album.id} size={{ xs: 6, sm: 4, md: 2 }}>\n              <CardComponent\n                image={album.images[0]?.url ?? \"\"}\n                name={album.name}\n                artistName={album.artists\n                  .map((artist) => artist.name)\n                  .join(\", \")}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <Typography></Typography>\n      )}\n    </>\n  );\n};\n\nexport default NewReleases;\n","import React from \"react\";\nimport { Typography, Grid } from \"@mui/material\";\nimport useGetNewReleases from \"../../../hooks/useGetNewReleases\";\nimport LoadingSpinner from \"../../../common/components/LoadingSpinner\";\nimport ErrorMessage from \"../../../common/components/ErrorMessage\";\nimport CardComponent from \"../../../common/components/CardComponent\";\n\nconst Tracks = () => {\n  const { data: newReleases, isLoading, error } = useGetNewReleases();\n\n  if (isLoading) return <LoadingSpinner />;\n  if (error) return <ErrorMessage errorMessage={error.message} />;\n\n  const albums = newReleases?.albums.items.slice(6, 12) ?? [];\n\n  return (\n    <>\n      <Typography variant=\"h2\" fontWeight={700} marginTop={6}>\n        Tracks\n      </Typography>\n      {albums.length > 0 ? (\n        <Grid container spacing={2}>\n          {albums.map((album) => (\n            <Grid key={album.id} size={{ xs: 6, sm: 4, md: 2 }}>\n              <CardComponent\n                image={album.images[0]?.url ?? \"\"}\n                name={album.name}\n                artistName={album.artists.map((a) => a.name).join(\", \")}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <Typography></Typography>\n      )}\n    </>\n  );\n};\n\nexport default Tracks;\n","import { Suspense } from \"react\";\nimport NewReleases from \"./components/NewReleases\";\nimport Tracks from \"./components/Tracks\";\nimport LoadingSpinner from \"../../common/components/LoadingSpinner\";\n\nconst Homepage = () => {\n  return (\n    <div>\n      <Suspense fallback={<LoadingSpinner />}>\n        <NewReleases />\n        <Tracks />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Homepage;\n"],"names":["_ref","errorMessage","_jsxs","Alert","severity","children","_jsx","AlertTitle","Typography","variant","useClientCredentialToken","data","useQuery","queryKey","queryFn","getClientCredentialToken","clientCredentialToken","access_token","getNewReleases","async","axios","get","SPOTIFY_API_URL","headers","Authorization","error","Error","getAlbumsByIds","ids","token","api","params","join","console","response","message","PlayButtonContainer","styled","theme","backgroundColor","palette","primary","main","border","borderRadius","width","height","display","alignItems","justifyContent","cursor","boxShadow","outline","PlayButton","viewBox","fill","xmlns","d","isMuiElement","element","muiNames","indexOf","type","muiName","_payload","value","useGetNewReleases","enabled","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardMediaRoot","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","inProps","ref","className","component","image","src","other","includes","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined","CardContainer","Box","position","opacity","transform","PlayButtonWrapper","right","bottom","transition","zIndex","artistName","Card","sx","marginTop","CardMedia","alt","whiteSpace","overflow","textOverflow","fontSize","color","NewReleases","isLoading","ErrorMessage","albums","items","slice","_Fragment","fontWeight","length","Grid","container","spacing","map","album","size","xs","sm","md","CardComponent","images","url","artists","artist","id","Tracks","newReleases","LoadingSpinner","a","Homepage","Suspense","fallback"],"sourceRoot":""}